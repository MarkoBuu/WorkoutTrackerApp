import kotlin.String;
import kotlin.collections.List;

CREATE TABLE FavoriteWorkout (
    exerciseId TEXT NOT NULL PRIMARY KEY,
    recipe_id TEXT UNIQUE NOT NULL,
    added_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (recipe_id) REFERENCES WorkoutDetail(exerciseId) ON DELETE CASCADE
);

insertFavoriteWorkout:
INSERT INTO FavoriteWorkout(exerciseId, recipe_id, added_at)
VALUES(?, ?, ?);

upsertFavoriteWorkout {
    UPDATE FavoriteWorkout
    SET exerciseId = :exerciseId,
    added_at = :added_at
    WHERE recipe_id = :recipe_id;

    INSERT OR IGNORE INTO FavoriteWorkout(exerciseId, recipe_id, added_at)
    VALUES(:exerciseId, :recipe_id, :added_at);
}

selectAllFavoritesWorkoutIds:
SELECT exerciseId FROM FavoriteWorkout;

selectAllFavoriteWorkouts:
SELECT WorkoutDetail.* FROM WorkoutDetail
INNER JOIN FavoriteWorkout ON WorkoutDetail.exerciseId = FavoriteWorkout.recipe_id;

selectIsFavorite:
SELECT * FROM FavoriteWorkout WHERE recipe_id = ?;

deleteFavoriteWorkoutById:
DELETE FROM FavoriteWorkout WHERE recipe_id = ?;

deleteFavoriteWorkout:
DELETE FROM FavoriteWorkout;