import kotlin.String;
import kotlin.collections.List;

CREATE TABLE Workout (
    exerciseId TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    imageURL TEXT NOT NULL,
    exerciseType TEXT NOT NULL,
    bodyParts TEXT AS List<String> NOT NULL,
    equipments TEXT AS List<String> NOT NULL,
    targetMuscles TEXT AS List<String> NOT NULL,
    secondaryMuscles TEXT AS List<String> NOT NULL,
    keywords TEXT AS List<String> NOT NULL,
    isFavorite INTEGER NOT NULL
);

insertWorkout:
INSERT INTO Workout(exerciseId, name, imageURL, exerciseType, bodyParts, equipments, targetMuscles, secondaryMuscles, keywords, isFavorite)
VALUES (?,?,?,?,?,?,?,?,?,?
);

upsertWorkout {
    UPDATE Workout
    SET name = :name,
    imageURL = :imageURL,
    exerciseType = :exerciseType,
    bodyParts = :bodyParts,
    equipments = :equipments,
    targetMuscles = :targetMuscles,
    secondaryMuscles = :secondaryMuscles,
    keywords = :keywords,
    isFavorite = :isFavorite
    WHERE exerciseId = :exerciseId;

    INSERT OR IGNORE INTO Workout(exerciseId, name, imageURL, exerciseType, bodyParts, equipments, targetMuscles, secondaryMuscles, keywords, isFavorite)
    VALUES (:exerciseId, :name, :imageURL, :exerciseType, :bodyParts, :equipments, :targetMuscles, :secondaryMuscles, :keywords, :isFavorite);

}

selectAllWorkouts:
SELECT * FROM Workout;

selectWorkoutById:
SELECT * FROM Workout WHERE exerciseId = ?;

updateWorkout:
UPDATE Workout
 SET name = ?,
    imageURL = ?,
    exerciseType = ?,
    bodyParts = ?,
    equipments = ?,
    targetMuscles = ?,
    secondaryMuscles = ?,
    keywords = ?,
    isFavorite = ?
    WHERE exerciseId = ?;

deleteWorkoutById:
DELETE FROM Workout WHERE exerciseId = ?;

deleteAllWorkouts:
DELETE FROM Workout;


CREATE TABLE WorkoutDetail (
    exerciseId TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    imageURL TEXT NOT NULL,
    exerciseType TEXT NOT NULL,
    bodyParts TEXT AS List<String> NOT NULL,
    equipments TEXT AS List<String> NOT NULL,
    targetMuscles TEXT AS List<String> NOT NULL,
    secondaryMuscles TEXT AS List<String> NOT NULL,
    keywords TEXT AS List<String> NOT NULL,
    overview TEXT NOT NULL,
    instructions TEXT AS List<String> NOT NULL,
    exerciseTips TEXT AS List<String> NOT NULL,
    variations TEXT AS List<String> NOT NULL,
    relatedExerciseIds TEXT AS List<String> NOT NULL,
    videoUrl TEXT NOT NULL,
    isFavorite INTEGER NOT NULL
);

insertWorkoutDetail:
INSERT INTO WorkoutDetail(exerciseId, name, imageURL, exerciseType, bodyParts, equipments, targetMuscles, secondaryMuscles, keywords,
overview, instructions, exerciseTips, variations, relatedExerciseIds, videoUrl, isFavorite)
VALUES (?,?,?, ?, ?, ?, ?, ?,?,?,?,?,
?, ?, ?, ?
);

upsertWorkoutDetail {
    UPDATE WorkoutDetail
    SET name = :name,
    imageURL = :imageURL,
    exerciseType = :exerciseType,
    bodyParts = :bodyParts,
    equipments = :equipments,
    targetMuscles = :targetMuscles,
    secondaryMuscles = :secondaryMuscles,
    keywords = :keywords,
    overview = :overview,
    instructions = :instructions,
    exerciseTips = :exerciseTips,
    variations = :variations,
    relatedExerciseIds = :relatedExerciseIds,
    videoUrl = :videoUrl,
    isFavorite = :isFavorite
    WHERE exerciseId = :exerciseId;

    INSERT OR IGNORE INTO WorkoutDetail(exerciseId, name, imageURL, exerciseType, bodyParts, equipments, targetMuscles, secondaryMuscles,
    keywords, overview, instructions, exerciseTips, variations, relatedExerciseIds, videoUrl,isFavorite)
    VALUES (:exerciseId, :name, :imageURL, :exerciseType, :bodyParts, :equipments, :targetMuscles, :secondaryMuscles,
    :keywords, :overview, :instructions, :exerciseTips, :variations,
    :relatedExerciseIds, :videoUrl, :isFavorite);

}

selectAllWorkoutDetails:
SELECT * FROM WorkoutDetail;

selectWorkoutDetailById:
SELECT * FROM WorkoutDetail WHERE exerciseId = ?;

updateWorkoutDetail:
UPDATE WorkoutDetail
 SET name = ?,
    imageURL = ?,
    exerciseType = ?,
    bodyParts = ?,
    equipments = ?,
    targetMuscles = ?,
    secondaryMuscles = ?,
    keywords = ?,
    overview = ?,
    instructions = ?,
    exerciseTips = ?,
    variations = ?,
    relatedExerciseIds = ?,
    videoUrl = ?,
    isFavorite = ?
    WHERE exerciseId = ?;

searchWorkoutByText:
SELECT * FROM Workout WHERE name LIKE ("%" || :query || "%")
 OR exerciseType LIKE ("%" || :query || "%")
 OR targetMuscles LIKE ("%" || :query || "%")
 OR keywords LIKE ("%" || :query || "%");